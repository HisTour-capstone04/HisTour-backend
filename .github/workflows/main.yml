name: HisTour CI/CD with Gradle, Docker, EC2

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        path: .

    - name: Print current directory after checkout
      run: pwd

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: make application.yml
      run: |
        mkdir -p ./src/main/resources
        cd ./src/main/resources
        touch ./application.yml
        echo "${{ secrets.APPLICATION_YML }}" > ./application.yml

    - name: Run chmod to make gradlew executable
      run: chmod +x ./gradlew

    - name: Build with Gradle Wrapper
      run: ./gradlew build

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Build and Push Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/histour .
        docker push ${{ secrets.DOCKER_USERNAME }}/histour:latest

  deploy:
    runs-on: self-hosted
    needs: build

    steps:
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCK0ER_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Stop and Remove existing Docker container
      run: |
        if docker ps -a --format '{{.Names}}' | grep -q "histour"; then
          docker stop histour
          docker rm histour
        fi
      continue-on-error: true

    - name: Pull Docker image from DockerHub
      run: docker pull ${{ secrets.DOCKER_USERNAME }}/histour:latest
      

    - name: Run Docker container
      run: |
        docker run -it -d -p 8080:8080 --name histour ${{ secrets.DOCKER_USERNAME }}/histour:latest
